/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

syntax = "proto3";

package skywalking.v3;

option java_multiple_files = true;
option java_package = "org.apache.skywalking.apm.network.language.asyncprofile.v3";
option csharp_namespace = "SkyWalking.NetworkProtocol.V3";
option go_package = "skywalking.apache.org/repo/goapi/collect/language/profile/v3";

import "common/Command.proto";

service AsyncProfilerTask {
  rpc collectJFR(stream JFRFileChunk) returns (Commands);
  // query all sniffer need to execute profile task commands
  rpc getAsyncProfileTaskCommands (AsyncProfileTaskCommandQuery) returns (Commands);
}

message JFRFileChunk {
  // current sniffer information
  string service = 1;
  string serviceInstance = 2;

  // profile task
  string taskId = 3;

  string format = 5;
  int64 from = 6;
  int64 until = 7;
  string aggregation = 8;
  string units = 9;
  // file content
  bytes content = 99;
}

message AsyncProfileTaskFinishReport {
  // current sniffer information
  string service = 1;
  string serviceInstance = 2;

  // profile task
  string taskId = 3;
}

message AsyncProfileTaskCommandQuery {
  // current sniffer information
  string service = 1;
  string serviceInstance = 2;

  // last command timestamp
  int64 lastCommandTime = 3;
}